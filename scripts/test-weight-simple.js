// –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –≤–µ—Å–∞ –∏–∑ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
function extractProductWeightFromJson(characteristicsJson) {
  try {
    const characteristics = JSON.parse(characteristicsJson);

    if (!characteristics || !Array.isArray(characteristics)) {
      return 500; // DEFAULT_PRODUCT_WEIGHT_GRAMS
    }

    // –ò—â–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É —Å –∫–ª—é—á–æ–º "–í–µ—Å"
    const weightChar = characteristics.find(
      (char) =>
        char.key.toLowerCase().includes("–≤–µ—Å") ||
        char.key.toLowerCase().includes("weight")
    );

    if (!weightChar) {
      return 500; // DEFAULT_PRODUCT_WEIGHT_GRAMS
    }

    // –ò–∑–≤–ª–µ–∫–∞–µ–º —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ —Å—Ç—Ä–æ–∫–∏
    const weightText = weightChar.value;
    const weightMatch = weightText.match(/(\d+(?:\.\d+)?)/);

    if (!weightMatch) {
      return 500; // DEFAULT_PRODUCT_WEIGHT_GRAMS
    }

    let weight = parseFloat(weightMatch[1]);

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –µ–¥–∏–Ω–∏—Ü—ã –∏–∑–º–µ—Ä–µ–Ω–∏—è –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –≥—Ä–∞–º–º—ã
    if (
      weightText.toLowerCase().includes("–∫–≥") ||
      weightText.toLowerCase().includes("kg")
    ) {
      weight *= 1000; // –∫–≥ –≤ –≥—Ä–∞–º–º—ã
    } else if (
      weightText.toLowerCase().includes("–≥—Ä") ||
      weightText.toLowerCase().includes("–≥")
    ) {
      // —É–∂–µ –≤ –≥—Ä–∞–º–º–∞—Ö
    } else {
      // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—á–∏—Ç–∞–µ–º, —á—Ç–æ —ç—Ç–æ –≥—Ä–∞–º–º—ã
    }

    console.log(`üîç Weight extraction: "${weightText}" ‚Üí ${weight}g`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–µ—Å –≤ —Ä–∞–∑—É–º–Ω—ã—Ö –ø—Ä–µ–¥–µ–ª–∞—Ö (–æ—Ç 1 –¥–æ 100 –∫–≥)
    if (weight < 1 || weight > 100000) {
      return 500; // DEFAULT_PRODUCT_WEIGHT_GRAMS
    }

    return Math.round(weight);
  } catch (error) {
    console.warn("Failed to parse product characteristics JSON:", error);
    return 500; // DEFAULT_PRODUCT_WEIGHT_GRAMS
  }
}

// –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –≤–µ—Å–∞
console.log("üöÄ Testing weight extraction...");

const testCases = [
  {
    name: "750 –≥—Ä",
    characteristics: JSON.stringify([
      { key: "–í–µ—Å", value: "750 –≥—Ä" },
      { key: "–ú–∞—Ç–µ—Ä–∏–∞–ª", value: "–ü–ª–∞—Å—Ç–∏–∫" },
    ]),
  },
  {
    name: "1.5 –∫–≥",
    characteristics: JSON.stringify([
      { key: "–í–µ—Å", value: "1.5 –∫–≥" },
      { key: "–ú–∞—Ç–µ—Ä–∏–∞–ª", value: "–î–µ—Ä–µ–≤–æ" },
    ]),
  },
  {
    name: "500–≥",
    characteristics: JSON.stringify([
      { key: "–í–µ—Å", value: "500–≥" },
      { key: "–ú–∞—Ç–µ—Ä–∏–∞–ª", value: "–ú–µ—Ç–∞–ª–ª" },
    ]),
  },
  {
    name: "2 –∫–≥",
    characteristics: JSON.stringify([
      { key: "–í–µ—Å", value: "2 –∫–≥" },
      { key: "–ú–∞—Ç–µ—Ä–∏–∞–ª", value: "–°—Ç–µ–∫–ª–æ" },
    ]),
  },
];

testCases.forEach((testCase, index) => {
  console.log(`\nüì¶ Test ${index + 1}: ${testCase.name}`);
  const weight = extractProductWeightFromJson(testCase.characteristics);
  console.log(`‚úÖ Result: ${weight} grams`);
});

console.log("\nüéØ Weight extraction test completed!");
