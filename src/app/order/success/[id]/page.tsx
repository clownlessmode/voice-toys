"use client";

import Button1 from "@/components/ui/typography/Button1";
import H1 from "@/components/ui/typography/H1";
import T1 from "@/components/ui/typography/T1";
import Footer from "@/components/widgets/Footer";
import Header from "@/components/widgets/Header";
import { cn } from "@/lib/utils";
import Link from "next/link";
import { useParams, useSearchParams } from "next/navigation";
import { useEffect, useState } from "react";

export default function Success() {
  const params = useParams();
  const searchParams = useSearchParams();
  const [paymentStatus, setPaymentStatus] = useState<
    "processing" | "success" | "error" | "cash_on_delivery"
  >("processing");
  const [errorMessage, setErrorMessage] = useState("");

  useEffect(() => {
    const processPayment = async () => {
      const orderId = params.id as string;
      const transactionId = searchParams.get("transaction_id");

      console.log("üéØ Processing payment success:", { orderId, transactionId });

      // –ï—Å–ª–∏ –Ω–µ—Ç transaction_id, —ç—Ç–æ –∑–∞–∫–∞–∑ —Å –æ–ø–ª–∞—Ç–æ–π –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏
      if (!transactionId) {
        console.log("üí∞ Cash on delivery order - no payment processing needed");
        setPaymentStatus("cash_on_delivery");
        return;
      }

      try {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã
        const response = await fetch(`/api/orders/${orderId}/pay`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            transaction_id: transactionId,
            state: "COMPLETE",
            source: "success_page",
          }),
        });

        const data = await response.json();

        if (response.ok && data.success) {
          console.log("‚úÖ Payment confirmed successfully");
          setPaymentStatus("success");
        } else {
          console.error("‚ùå Payment confirmation failed:", data);
          setPaymentStatus("error");
          setErrorMessage(data.error || "–û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã");
        }
      } catch (error) {
        console.error("‚ùå Error confirming payment:", error);
        setPaymentStatus("error");
        setErrorMessage("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –æ–ø–ª–∞—Ç—ã");
      }
    };

    processPayment();
  }, [params.id, searchParams]);
  return (
    <main
      className={cn(
        "px-[10px] gap-[40px]",
        "xl:px-[50px] xl:gap-[50px]",
        "2xl:px-[100px] 2xl:gap-[60px]",
        "flex flex-col items-center justify-start min-h-screen bg-body-background"
      )}
    >
      <Header />
      <div
        className={cn(
          "p-[24px] rounded-[20px] gap-[96px]",
          "sm:p-[48px] sm:gap-[48px]",
          "w-full bg-cover bg-center lg:bg-right",
          "bg-background w-full flex flex-col items-center min-h-[85vh] lg:min-h-[600px] ",
          "bg-[url('/success/mobile-bg.png')]",
          "lg:bg-[url('/success/bg.png')]",
          "lg:items-start lg:justify-center"
        )}
      >
        <div
          className={cn(
            "gap-[24px] max-w-[560px] sm:max-w-[640px] md:max-w-[760px]",
            "flex flex-col items-center lg:items-start"
          )}
        >
          {paymentStatus === "processing" && (
            <>
              <H1 className="text-center lg:text-left">
                –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –æ–ø–ª–∞—Ç—É...
              </H1>
              <T1 className="text-center lg:text-left sm:px-[10px] max-w-[500px] sm:max-w-[605px] xl:max-w-[850px]">
                –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ. –ú—ã –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –≤–∞—à–µ–≥–æ –ø–ª–∞—Ç–µ–∂–∞.
              </T1>
            </>
          )}

          {paymentStatus === "success" && (
            <>
              <H1 className="text-center lg:text-left">
                –£—Ä–∞! –í–∞—à –∑–∞–∫–∞–∑ –æ–ø–ª–∞—á–µ–Ω
              </H1>
              <T1 className="text-center lg:text-left sm:px-[10px] max-w-[500px] sm:max-w-[605px] xl:max-w-[850px]">
                –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω. –ú—ã —É–∂–µ –Ω–∞—á–∞–ª–∏ —Å–æ–±–∏—Ä–∞—Ç—å –∏–≥—Ä—É—à–∫–∏. –°–∫–æ—Ä–æ
                –≤—ã –ø–æ–ª—É—á–∏—Ç–µ SMS —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –¥–æ—Å—Ç–∞–≤–∫–µ.
              </T1>
            </>
          )}

          {paymentStatus === "error" && (
            <>
              <H1 className="text-center lg:text-left">–û—à–∏–±–∫–∞ –æ–ø–ª–∞—Ç—ã</H1>
              <T1 className="text-center lg:text-left sm:px-[10px] max-w-[500px] sm:max-w-[605px] xl:max-w-[850px]">
                {errorMessage ||
                  "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –æ–ø–ª–∞—Ç—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π."}
              </T1>
            </>
          )}

          {paymentStatus === "cash_on_delivery" && (
            <>
              <H1 className="text-center lg:text-left">
                –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω!
              </H1>
              <T1 className="text-center lg:text-left sm:px-[10px] max-w-[500px] sm:max-w-[605px] xl:max-w-[850px]">
                –í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É. –û–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏.
                –ú—ã —É–∂–µ –Ω–∞—á–∞–ª–∏ —Å–æ–±–∏—Ä–∞—Ç—å –∏–≥—Ä—É—à–∫–∏. –°–∫–æ—Ä–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ SMS —Å
                –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –¥–æ—Å—Ç–∞–≤–∫–µ.
              </T1>
            </>
          )}
        </div>
        <Link
          href={"/catalogue"}
          className="w-full flex justify-center lg:justify-start"
        >
          <Button1 className="max-w-[560px] justify-center w-full!">
            –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
          </Button1>
        </Link>
      </div>
      <Footer />
    </main>
  );
}
